/* Generated file, do not edit */

#ifndef CXXTEST_RUNNING
#define CXXTEST_RUNNING
#endif

#define _CXXTEST_HAVE_STD
#include <cxxtest/TestListener.h>
#include <cxxtest/TestTracker.h>
#include <cxxtest/TestRunner.h>
#include <cxxtest/RealDescriptions.h>
#include <cxxtest/ErrorPrinter.h>

int main() {
 return CxxTest::ErrorPrinter().run();
}
#include "TestNormMaxMin.h"

static NormMaxMin_runner suite_NormMaxMin_runner;

static CxxTest::List Tests_NormMaxMin_runner = { 0, 0 };
CxxTest::StaticSuiteDescription suiteDescription_NormMaxMin_runner( "TestNormMaxMin.h", 34, "NormMaxMin_runner", suite_NormMaxMin_runner, Tests_NormMaxMin_runner );

static class TestDescription_NormMaxMin_runner_test_two_pass_observations_should_normalize_across_each_observation : public CxxTest::RealTestDescription {
public:
 TestDescription_NormMaxMin_runner_test_two_pass_observations_should_normalize_across_each_observation() : CxxTest::RealTestDescription( Tests_NormMaxMin_runner, suiteDescription_NormMaxMin_runner, 77, "test_two_pass_observations_should_normalize_across_each_observation" ) {}
 void runTest() { suite_NormMaxMin_runner.test_two_pass_observations_should_normalize_across_each_observation(); }
} testDescription_NormMaxMin_runner_test_two_pass_observations_should_normalize_across_each_observation;

static class TestDescription_NormMaxMin_runner_test_train_on_observations_only_should_not_change_input_data : public CxxTest::RealTestDescription {
public:
 TestDescription_NormMaxMin_runner_test_train_on_observations_only_should_not_change_input_data() : CxxTest::RealTestDescription( Tests_NormMaxMin_runner, suiteDescription_NormMaxMin_runner, 92, "test_train_on_observations_only_should_not_change_input_data" ) {}
 void runTest() { suite_NormMaxMin_runner.test_train_on_observations_only_should_not_change_input_data(); }
} testDescription_NormMaxMin_runner_test_train_on_observations_only_should_not_change_input_data;

static class TestDescription_NormMaxMin_runner_test_should_be_able_to_train_observations_and_then_predict : public CxxTest::RealTestDescription {
public:
 TestDescription_NormMaxMin_runner_test_should_be_able_to_train_observations_and_then_predict() : CxxTest::RealTestDescription( Tests_NormMaxMin_runner, suiteDescription_NormMaxMin_runner, 106, "test_should_be_able_to_train_observations_and_then_predict" ) {}
 void runTest() { suite_NormMaxMin_runner.test_should_be_able_to_train_observations_and_then_predict(); }
} testDescription_NormMaxMin_runner_test_should_be_able_to_train_observations_and_then_predict;

static class TestDescription_NormMaxMin_runner_test_observations_maximums_control_should_be_set_properly_after_train_and_then_predict : public CxxTest::RealTestDescription {
public:
 TestDescription_NormMaxMin_runner_test_observations_maximums_control_should_be_set_properly_after_train_and_then_predict() : CxxTest::RealTestDescription( Tests_NormMaxMin_runner, suiteDescription_NormMaxMin_runner, 131, "test_observations_maximums_control_should_be_set_properly_after_train_and_then_predict" ) {}
 void runTest() { suite_NormMaxMin_runner.test_observations_maximums_control_should_be_set_properly_after_train_and_then_predict(); }
} testDescription_NormMaxMin_runner_test_observations_maximums_control_should_be_set_properly_after_train_and_then_predict;

static class TestDescription_NormMaxMin_runner_test_observations_minimums_control_should_be_set_properly_after_train_and_then_predict : public CxxTest::RealTestDescription {
public:
 TestDescription_NormMaxMin_runner_test_observations_minimums_control_should_be_set_properly_after_train_and_then_predict() : CxxTest::RealTestDescription( Tests_NormMaxMin_runner, suiteDescription_NormMaxMin_runner, 146, "test_observations_minimums_control_should_be_set_properly_after_train_and_then_predict" ) {}
 void runTest() { suite_NormMaxMin_runner.test_observations_minimums_control_should_be_set_properly_after_train_and_then_predict(); }
} testDescription_NormMaxMin_runner_test_observations_minimums_control_should_be_set_properly_after_train_and_then_predict;

static class TestDescription_NormMaxMin_runner_test_two_pass_samples_should_normalize_down_each_sample : public CxxTest::RealTestDescription {
public:
 TestDescription_NormMaxMin_runner_test_two_pass_samples_should_normalize_down_each_sample() : CxxTest::RealTestDescription( Tests_NormMaxMin_runner, suiteDescription_NormMaxMin_runner, 166, "test_two_pass_samples_should_normalize_down_each_sample" ) {}
 void runTest() { suite_NormMaxMin_runner.test_two_pass_samples_should_normalize_down_each_sample(); }
} testDescription_NormMaxMin_runner_test_two_pass_samples_should_normalize_down_each_sample;

static class TestDescription_NormMaxMin_runner_test_train_on_samples_only_should_not_change_input_data : public CxxTest::RealTestDescription {
public:
 TestDescription_NormMaxMin_runner_test_train_on_samples_only_should_not_change_input_data() : CxxTest::RealTestDescription( Tests_NormMaxMin_runner, suiteDescription_NormMaxMin_runner, 181, "test_train_on_samples_only_should_not_change_input_data" ) {}
 void runTest() { suite_NormMaxMin_runner.test_train_on_samples_only_should_not_change_input_data(); }
} testDescription_NormMaxMin_runner_test_train_on_samples_only_should_not_change_input_data;

static class TestDescription_NormMaxMin_runner_test_should_be_able_to_train_samples_and_then_predict : public CxxTest::RealTestDescription {
public:
 TestDescription_NormMaxMin_runner_test_should_be_able_to_train_samples_and_then_predict() : CxxTest::RealTestDescription( Tests_NormMaxMin_runner, suiteDescription_NormMaxMin_runner, 195, "test_should_be_able_to_train_samples_and_then_predict" ) {}
 void runTest() { suite_NormMaxMin_runner.test_should_be_able_to_train_samples_and_then_predict(); }
} testDescription_NormMaxMin_runner_test_should_be_able_to_train_samples_and_then_predict;

static class TestDescription_NormMaxMin_runner_test_samples_maximums_control_should_be_set_properly_after_train_and_then_predict : public CxxTest::RealTestDescription {
public:
 TestDescription_NormMaxMin_runner_test_samples_maximums_control_should_be_set_properly_after_train_and_then_predict() : CxxTest::RealTestDescription( Tests_NormMaxMin_runner, suiteDescription_NormMaxMin_runner, 220, "test_samples_maximums_control_should_be_set_properly_after_train_and_then_predict" ) {}
 void runTest() { suite_NormMaxMin_runner.test_samples_maximums_control_should_be_set_properly_after_train_and_then_predict(); }
} testDescription_NormMaxMin_runner_test_samples_maximums_control_should_be_set_properly_after_train_and_then_predict;

static class TestDescription_NormMaxMin_runner_test_samples_minimums_control_should_be_set_properly_after_train_and_then_predict : public CxxTest::RealTestDescription {
public:
 TestDescription_NormMaxMin_runner_test_samples_minimums_control_should_be_set_properly_after_train_and_then_predict() : CxxTest::RealTestDescription( Tests_NormMaxMin_runner, suiteDescription_NormMaxMin_runner, 235, "test_samples_minimums_control_should_be_set_properly_after_train_and_then_predict" ) {}
 void runTest() { suite_NormMaxMin_runner.test_samples_minimums_control_should_be_set_properly_after_train_and_then_predict(); }
} testDescription_NormMaxMin_runner_test_samples_minimums_control_should_be_set_properly_after_train_and_then_predict;

static class TestDescription_NormMaxMin_runner_test_two_pass_slices_should_normalize_over_entire_slice : public CxxTest::RealTestDescription {
public:
 TestDescription_NormMaxMin_runner_test_two_pass_slices_should_normalize_over_entire_slice() : CxxTest::RealTestDescription( Tests_NormMaxMin_runner, suiteDescription_NormMaxMin_runner, 254, "test_two_pass_slices_should_normalize_over_entire_slice" ) {}
 void runTest() { suite_NormMaxMin_runner.test_two_pass_slices_should_normalize_over_entire_slice(); }
} testDescription_NormMaxMin_runner_test_two_pass_slices_should_normalize_over_entire_slice;

static class TestDescription_NormMaxMin_runner_test_train_on_slices_only_should_not_change_input_data : public CxxTest::RealTestDescription {
public:
 TestDescription_NormMaxMin_runner_test_train_on_slices_only_should_not_change_input_data() : CxxTest::RealTestDescription( Tests_NormMaxMin_runner, suiteDescription_NormMaxMin_runner, 268, "test_train_on_slices_only_should_not_change_input_data" ) {}
 void runTest() { suite_NormMaxMin_runner.test_train_on_slices_only_should_not_change_input_data(); }
} testDescription_NormMaxMin_runner_test_train_on_slices_only_should_not_change_input_data;

static class TestDescription_NormMaxMin_runner_test_should_be_able_to_train_slices_and_then_predict : public CxxTest::RealTestDescription {
public:
 TestDescription_NormMaxMin_runner_test_should_be_able_to_train_slices_and_then_predict() : CxxTest::RealTestDescription( Tests_NormMaxMin_runner, suiteDescription_NormMaxMin_runner, 282, "test_should_be_able_to_train_slices_and_then_predict" ) {}
 void runTest() { suite_NormMaxMin_runner.test_should_be_able_to_train_slices_and_then_predict(); }
} testDescription_NormMaxMin_runner_test_should_be_able_to_train_slices_and_then_predict;

static class TestDescription_NormMaxMin_runner_test_slices_maximums_control_should_be_set_properly_after_train_and_then_predict : public CxxTest::RealTestDescription {
public:
 TestDescription_NormMaxMin_runner_test_slices_maximums_control_should_be_set_properly_after_train_and_then_predict() : CxxTest::RealTestDescription( Tests_NormMaxMin_runner, suiteDescription_NormMaxMin_runner, 306, "test_slices_maximums_control_should_be_set_properly_after_train_and_then_predict" ) {}
 void runTest() { suite_NormMaxMin_runner.test_slices_maximums_control_should_be_set_properly_after_train_and_then_predict(); }
} testDescription_NormMaxMin_runner_test_slices_maximums_control_should_be_set_properly_after_train_and_then_predict;

static class TestDescription_NormMaxMin_runner_test_slices_minimums_control_should_be_set_properly_after_train_and_then_predict : public CxxTest::RealTestDescription {
public:
 TestDescription_NormMaxMin_runner_test_slices_minimums_control_should_be_set_properly_after_train_and_then_predict() : CxxTest::RealTestDescription( Tests_NormMaxMin_runner, suiteDescription_NormMaxMin_runner, 321, "test_slices_minimums_control_should_be_set_properly_after_train_and_then_predict" ) {}
 void runTest() { suite_NormMaxMin_runner.test_slices_minimums_control_should_be_set_properly_after_train_and_then_predict(); }
} testDescription_NormMaxMin_runner_test_slices_minimums_control_should_be_set_properly_after_train_and_then_predict;

#include <cxxtest/Root.cpp>
